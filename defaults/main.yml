---
# defaults file for ansible_role_template_tree
#template_tree_src_dir: /opt/templates/app/config
#template_tree_dest_dir: /tmp/app

# Whether to explicitly set owner/group
#template_tree_owner: someuser
#template_tree_group: somegroup

# By default the file/directory modes are retained.
# But you can explicitly set them if needed
# template_tree_dir_mode: "0770"
# template_tree_file_mode: "0440"

# Limit templating to source file name regex.
# By default we template everything ('^$').
# The files names that do NOT match this regex will be copied as-is.
# Useful for mixed content like scripts, images, etc.
# See https://docs.python.org/3/library/re.html#regular-expression-syntax
# and the inline flags
template_tree_filename_regex: '.*'
#template_tree_file_regex: '^\.(php|html|css)$'
#template_tree_file_regex: '(?i)^\.(php|html|css)$' # case insensitive



# Transform the source file names using a regex.
# Useful for stripping j2 extenstions etc.
template_tree_filename_transform_regex: '\.j2'

# Optionally validate files.
# Items in this list consist of:
# regex:    file name regular expressions
# validate: the command should be used to validate. This is passed to
#           either the template or copy module.
# If 'template_tree_filename_regex' is used to only template a subset of
# all files, the rest of the files are copied using the 'copy' module.
# But since this module also support validation, you can also use it here.
# An example use case would be template a web server directory, where the
# PHP files are templated, images are copied, but images are also checked
# for integrity.
# Make sure the commands used for validation are available on the remote host.
# Also, make sure the regular expressions do not overlap.
template_tree_validation: []
#template_tree_validation:
#  - name: PHP files
#    regex: '\.php$'
#    validate: 'php -l %s'
#  - name: X.509 certificates
#    regex: '\.ce?rt$'
#    validate: 'openssl x509 -noout -in %s'
#  - name: Images
#    regex: '\.(?i)(jpe?g|png|gif|bmp)$'
#    validate: 'identify %s'
#  - name: XML files
#    regex: '\.xml$'
#    validate: 'xmllint %s'


# Remove remote content
template_tree_delete: false
