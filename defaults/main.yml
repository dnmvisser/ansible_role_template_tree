---
# These are mandatory - we don't supply defaults
#tt_src_dir: /opt/templates/app/config
#tt_dest_dir: /tmp/app

# Whether to explicitly set owner/group
#tt_owner: someuser
#tt_group: somegroup

# By default the file/directory modes are retained.
# But you can explicitly set them if needed
# tt_dir_mode: "0770"
# tt_file_mode: "0440"

# Limit templating to file names matching this regex pattern.
# The default is to template all files ('.*').
# Files names that do not match this pattern will not be
# templated, but copied as-is.
# Useful for mixed content like scripts, images, etc.
# See https://docs.python.org/3/library/re.html#regular-expression-syntax
# Notably the inline flags to influence behavior like case senstivity.
tt_template_pattern: '.*'
# tt_template_pattern: '\.(php|html?|css)(\.j2)?$'
# tt_template_pattern: '(?i)\.(php|html?|css)(\.j2)?$' # same but case insensitive


# Strip part(s) of the source file names that match this regex pattern.
# Useful for stripping jinja extenstions (the default).
tt_strip_pattern: '\.(j2)$'


# Validate files names that match a list of regex patterns.
# Items in this list consist of:
# pattern:    file name regex pattern
# validate: the command should be used to validate. This is passed to
#           either the template or copy module.
# desc:     optional description
# If 'tt_template_regex' is used to only template a certain files, the
# the rest of the files are copied as-is, using the 'copy' module.
# But since this module also supports validation, you can also use it here.
# Make sure the commands used for validation are available on the remote host.
# Make sure to include any .j2 matching in the regex.
# Make sure the regular expressions do not overlap.
tt_validate: []
#tt_validate:
#  - desc: PHP files
#    pattern: '\.php(\.j2)?$'
#    validate: 'php -l %s'
#  - desc: X.509 certificates
#    pattern: '\.ce?rt$'
#    validate: 'openssl x509 -noout -in %s'
#  - desc: Images
#    pattern: '\.(?i)(jpe?g|png|gif|bmp)$'
#    validate: 'identify %s'
#  - desc: XML files
#    pattern: '\.xml(\.j2)?$'
#    validate: 'xmllint %s'
#  - desc: YAML files
#    pattern: '\.ya?ml$'
#    validate: 'yamllint -d relaxed %s'
#  - desc: JSON files
#    pattern: '\.json$'
#    validate: 'jsonlint %s'

# Remove remote content
# Enabling this will result in a 'synced' directory
tt_delete: false



# Defaults for inside tasks - these shouldn't be changed
#_files: []
#_files_to_rename: []
#_files_to_not_rename: []
tt_result_dirs: {}
tt_result_templates: {}
tt_result_files: {}
tt_result_delete: {}

tt_dirs_changed: false
tt_templates_changed: false
tt_files_changed: false
tt_delete_changed: false
