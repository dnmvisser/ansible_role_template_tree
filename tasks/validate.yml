---
# This iterates over items in tt_validate, and add the item itself to each
# file that matches the regex. The result is that each file item contains a 'validate'
# key that can be used by the template or copy task later.
- debug: var=instance
- debug: var=_files
- debug: var=_files|count

- name: Create list of files to validate
  set_fact:
    _files_to_validate: "{{ _files_to_validate | default([]) | union(
        _files | selectattr('path', 'regex', v.pattern) |
        map('combine', {'validate': v.validate} )
      ) }}"
  loop: "{{ tt_validate }}"
  loop_control:
    loop_var: v
    label: "{{ v.desc|default(v.pattern) }}"

# This has now doubled
- debug: var=_files_to_validate
- debug: var=_files_to_validate|count


- name: Create list of files to not validate
  set_fact:
    _files_to_not_validate: "{{ _files|rejectattr('path', 'in', _files_to_validate|json_query('[?validate].path')) }}"

- name: Create list of all of files, with validation info
  set_fact:
    _files: "{{ _files_to_validate | union(_files_to_not_validate) }}"
