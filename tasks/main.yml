---
- name: Ensure required variables are set
  assert:
    that:
      - tt_src_dir is defined
      - tt_dest_dir is defined

- name: "Find all local content in {{ tt_src_dir }}"
  become: false
  connection: local
  find:
    paths: "{{ tt_src_dir }}"
    recurse: true
    hidden: true
    file_type: any
  register: _local

- name: Create list of all files
  set_fact:
    _files: "{{ _local | json_query('files[?!isdir]') }}"

- name: Include file renaming tasks
  include_tasks: rename.yml

- name: Include validation tasks
  include_tasks: validate.yml
  when: tt_validation|length > 0

- name: Establish list of directories, templates, and files
  set_fact:
    _dirs: "{{ _local | json_query('files[?isdir]') }}"
    _template_files: "{{ _files | selectattr('path', 'regex', tt_filename_regex) }}"
    # A bit of duplication but this way we can have just a single set_fact task
    _copy_files: "{{ _files | difference (_files | selectattr('path', 'regex', tt_filename_regex)) }}"

#- debug: var=_dirs|union(_files)
- name: "Ensure directories are available in {{ tt_dest_dir }}"
  file:
    path: "{{ tt_dest_dir ~ '/' ~ ( dir.path | relpath(tt_src_dir))  }}"
    state: directory
    mode: "{{ tt_dir_mode | default(dir.mode) }}"
    owner: "{{ tt_owner | default(omit) }}"
    group: "{{ tt_group | default(omit) }}"
  loop: "{{ _dirs }}"
  loop_control:
    loop_var: dir
    label: "{{ dir.path | relpath(tt_src_dir) }}"

- name: Ensure files are templated
  template:
    src: '{{ file.path }}'
    dest: "{{ tt_dest_dir ~ '/' ~ ( file.new_path|default(file.path) | relpath(tt_src_dir)) }}"
    mode: "{{ tt_file_mode | default(file.mode) }}"
    owner: "{{ tt_owner | default(omit) }}"
    group: "{{ tt_group | default(omit) }}"
    validate: "{{ file.validate | default(omit) }}"
  loop: "{{ _template_files }}"
  loop_control:
    loop_var: file
    label: " {{ file.path }} => {{ tt_dest_dir ~ '/' ~ ( file.new_path|default(file.path) | relpath(tt_src_dir)) }}"

- name: Ensure remainder files are copied as-is
  copy:
    src: '{{ file.path }}'
    dest: "{{ tt_dest_dir ~ '/' ~ ( file.new_path|default(file.path) | relpath(tt_src_dir)) }}"
    mode: "{{ tt_file_mode | default(file.mode) }}"
    owner: "{{ tt_owner | default(omit) }}"
    group: "{{ tt_group | default(omit) }}"
    validate: "{{ file.validate | default(omit) }}"
  loop: "{{ _copy_files }}"
  loop_control:
    loop_var: file
    label: " {{ file.path }} => {{ tt_dest_dir ~ '/' ~ ( file.new_path|default(file.path) | relpath(tt_src_dir)) }}"

- name: Include deletion tasks
  include_tasks: delete.yml
  when: tt_delete|bool
