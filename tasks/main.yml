---
- name: "Find all local content in {{ template_tree_src_dir }}"
  become: false
  connection: local
  find:
    paths: "{{ template_tree_src_dir }}"
    recurse: true
    hidden: true
    file_type: any
  register: _local

- name: Establish list of directories, templates, and files.
  set_fact:
    _dirs: "{{ _local | json_query('files[?isdir]') }}"
    _template_files: "{{ _local | json_query('files[?!isdir]') | selectattr('path', 'regex', template_tree_filename_regex) }}"
    _copy_files: "{{ _local | json_query('files[?!isdir]') | difference (_local | json_query('files[?!isdir]') | selectattr('path', 'regex', template_tree_filename_regex)) }}"

- name: "Ensure directories are available in {{ template_tree_dest_dir }}"
  file:
    path: "{{ template_tree_dest_dir ~ '/' ~ ( dir.path | relpath(template_tree_src_dir))  }}"
    state: directory
    mode: "{{ template_tree_dir_mode | default(dir.mode) }}"
    owner: "{{ template_tree_owner | default(omit) }}"
    group: "{{ template_tree_group | default(omit) }}"
  loop: "{{ _dirs }}"
  loop_control:
    loop_var: dir
    label: "{{ dir.path | relpath(template_tree_src_dir) }}"

- name: Ensure files are templated
  template:
    src: '{{ file.path }}'
    dest: "{{ template_tree_dest_dir ~ '/' ~ ( file.path | relpath(template_tree_src_dir))  }}"
    mode: "{{ template_tree_file_mode | default(file.mode) }}"
    owner: "{{ template_tree_owner | default(omit) }}"
    group: "{{ template_tree_group | default(omit) }}"
    #validate: "{{ validate[file.path|regex_replace('.*\\.(.*?)$','\\1')] | default(omit) }}"
  loop: "{{ _template_files }}"
  loop_control:
    loop_var: file
    label: " {{ file.path }} => {{ template_tree_dest_dir ~ '/' ~ ( file.path | relpath(template_tree_src_dir))  }}"
  register: simplesamlphp_template_tree_template_results

- name: Ensure files are copied
  copy:
    src: '{{ file.path }}'
    dest: "{{ template_tree_dest_dir ~ '/' ~ ( file.path | relpath(template_tree_src_dir))  }}"
    mode: "{{ template_tree_file_mode | default(file.mode) }}"
    owner: "{{ template_tree_owner | default(omit) }}"
    group: "{{ template_tree_group | default(omit) }}"
    #validate: "{{ validate[file.path|regex_replace('.*\\.(.*?)$','\\1')] | default(omit) }}"
  loop: "{{ _copy_files }}"
  loop_control:
    loop_var: file
    label: " {{ file.path }} => {{ template_tree_dest_dir ~ '/' ~ ( file.path | relpath(template_tree_src_dir))  }}"
  register: simplesamlphp_template_tree_file_results

- name: Include deletion tasks
  include_tasks: delete.yml
  when: template_tree_delete|bool
